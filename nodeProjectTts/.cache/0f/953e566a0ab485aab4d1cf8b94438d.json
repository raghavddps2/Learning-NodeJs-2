{"id":"node_modules/speak-tts/lib/speak-tts.js","dependencies":[{"name":"E:\\NodeNinja\\nodeProjectTts\\package.json","includedInParent":true,"mtime":1551558297846},{"name":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\package.json","includedInParent":true,"mtime":1551557957577},{"name":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\.babelrc","includedInParent":true,"mtime":499162500000},{"name":"lodash/trim","loc":{"line":8,"column":43},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\trim.js"},{"name":"lodash/size","loc":{"line":10,"column":43},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\size.js"},{"name":"lodash/get","loc":{"line":12,"column":42},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\get.js"},{"name":"lodash/toPairs","loc":{"line":14,"column":46},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\toPairs.js"},{"name":"lodash/isNil","loc":{"line":16,"column":44},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\isNil.js"},{"name":"lodash/isObject","loc":{"line":18,"column":47},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\isObject.js"},{"name":"lodash/isString","loc":{"line":20,"column":47},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\isString.js"},{"name":"lodash/isFinite","loc":{"line":22,"column":47},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\isFinite.js"},{"name":"./utils","loc":{"line":24,"column":21},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\speak-tts.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\utils.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _trim = _interopRequireDefault(require(\"lodash/trim\"));\n\nvar _size = _interopRequireDefault(require(\"lodash/size\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _toPairs = _interopRequireDefault(require(\"lodash/toPairs\"));\n\nvar _isNil = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _isObject = _interopRequireDefault(require(\"lodash/isObject\"));\n\nvar _isString = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isFinite = _interopRequireDefault(require(\"lodash/isFinite\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SpeakTTS =\n/*#__PURE__*/\nfunction () {\n  function SpeakTTS() {\n    _classCallCheck(this, SpeakTTS);\n\n    this.browserSupport = 'speechSynthesis' in window && 'SpeechSynthesisUtterance' in window;\n    this.synthesisVoice = null;\n  }\n\n  _createClass(SpeakTTS, [{\n    key: \"init\",\n    value: function init(conf) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this.browserSupport) {\n          reject('Your browser does not support Speech Synthesis');\n        }\n\n        var listeners = (0, _get.default)(conf, 'listeners', {});\n        var splitSentences = (0, _get.default)(conf, 'splitSentences', true);\n        var lang = (0, _get.default)(conf, 'lang');\n        var volume = (0, _get.default)(conf, 'volume', 1);\n        var rate = (0, _get.default)(conf, 'rate', 1);\n        var pitch = (0, _get.default)(conf, 'pitch', 1);\n        var voice = (0, _get.default)(conf, 'voice'); // Attach event listeners\n\n        (0, _toPairs.default)(listeners).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              listener = _ref2[0],\n              fn = _ref2[1];\n\n          var newListener = function newListener(data) {\n            fn && fn(data);\n          };\n\n          if (listener !== 'onvoiceschanged') {\n            speechSynthesis[listener] = newListener;\n          }\n        });\n\n        _this._loadVoices().then(function (voices) {\n          // Handle callback onvoiceschanged by hand\n          listeners['onvoiceschanged'] && listeners['onvoiceschanged'](voices); // Initialize values if necessary\n\n          !(0, _isNil.default)(lang) && _this.setLanguage(lang);\n          !(0, _isNil.default)(voice) && _this.setVoice(voice);\n          !(0, _isNil.default)(volume) && _this.setVolume(volume);\n          !(0, _isNil.default)(rate) && _this.setRate(rate);\n          !(0, _isNil.default)(pitch) && _this.setPitch(pitch);\n          !(0, _isNil.default)(splitSentences) && _this.setSplitSentences(splitSentences);\n          resolve({\n            voices: voices,\n            lang: _this.lang,\n            voice: _this.voice,\n            volume: _this.volume,\n            rate: _this.rate,\n            pitch: _this.pitch,\n            splitSentences: _this.splitSentences,\n            browserSupport: _this.browserSupport\n          });\n        }).catch(function () {\n          reject();\n        });\n      });\n    }\n  }, {\n    key: \"_fetchVoices\",\n    value: function _fetchVoices() {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          var voices = speechSynthesis.getVoices();\n\n          if ((0, _size.default)(voices) > 0) {\n            return resolve(voices);\n          } else {\n            return reject();\n          }\n        }, 100);\n      });\n    }\n  }, {\n    key: \"_loadVoices\",\n    value: function _loadVoices() {\n      var _this2 = this;\n\n      var remainingAttempts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this._fetchVoices().catch(function (error) {\n        if (remainingAttempts === 0) throw error;\n        return _this2._loadVoices(remainingAttempts - 1);\n      });\n    }\n  }, {\n    key: \"hasBrowserSupport\",\n    value: function hasBrowserSupport() {\n      return this.browserSupport;\n    }\n  }, {\n    key: \"setVoice\",\n    value: function setVoice(voice) {\n      var synthesisVoice;\n      var voices = speechSynthesis.getVoices(); // set voice by name\n\n      if ((0, _isString.default)(voice)) {\n        synthesisVoice = voices.find(function (v) {\n          return v.name === voice;\n        });\n      } // Set the voice in conf if found\n\n\n      if ((0, _isObject.default)(voice)) {\n        synthesisVoice = voice;\n      }\n\n      if (synthesisVoice) {\n        this.synthesisVoice = synthesisVoice;\n      } else {\n        throw 'Error setting voice. The voice you passed is not valid or the voices have not been loaded yet.';\n      }\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(lang) {\n      lang = lang.replace('_', '-'); // some Android versions seem to ignore BCP 47 and use an underscore character in language tag\n\n      if ((0, _utils.validateLocale)(lang)) {\n        this.lang = lang;\n      } else {\n        throw 'Error setting language. Please verify your locale is BCP47 format (http://schneegans.de/lv/?tags=es-FR&format=text)';\n      }\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      volume = parseFloat(volume);\n\n      if ((0, _isFinite.default)(volume) && volume >= 0 && volume <= 1) {\n        this.volume = volume;\n      } else {\n        throw 'Error setting volume. Please verify your volume value is a number between 0 and 1.';\n      }\n    }\n  }, {\n    key: \"setRate\",\n    value: function setRate(rate) {\n      rate = parseFloat(rate);\n\n      if ((0, _isFinite.default)(rate) && rate >= 0 && rate <= 10) {\n        this.rate = rate;\n      } else {\n        throw 'Error setting rate. Please verify your volume value is a number between 0 and 10.';\n      }\n    }\n  }, {\n    key: \"setPitch\",\n    value: function setPitch(pitch) {\n      pitch = parseFloat(pitch);\n\n      if ((0, _isFinite.default)(pitch) && pitch >= 0 && pitch <= 2) {\n        this.pitch = pitch;\n      } else {\n        throw 'Error setting pitch. Please verify your pitch value is a number between 0 and 2.';\n      }\n    }\n  }, {\n    key: \"setSplitSentences\",\n    value: function setSplitSentences(splitSentences) {\n      this.splitSentences = splitSentences;\n    }\n  }, {\n    key: \"speak\",\n    value: function speak(data) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        var text = data.text,\n            _data$listeners = data.listeners,\n            listeners = _data$listeners === void 0 ? {} : _data$listeners,\n            _data$queue = data.queue,\n            queue = _data$queue === void 0 ? true : _data$queue;\n        var msg = (0, _trim.default)(text);\n        if ((0, _isNil.default)(msg)) resolve(); // Stop current speech\n\n        !queue && _this3.cancel(); // Split into sentences (for better result and bug with some versions of chrome)\n\n        var utterances = [];\n        var sentences = _this3.splitSentences ? (0, _utils.splitSentences)(msg) : [msg];\n        sentences.forEach(function (sentence, index) {\n          var isLast = index === (0, _size.default)(sentences) - 1;\n          var utterance = new SpeechSynthesisUtterance();\n          if (_this3.synthesisVoice) utterance.voice = _this3.synthesisVoice;\n          if (_this3.lang) utterance.lang = _this3.lang;\n          if (_this3.volume) utterance.volume = _this3.volume; // 0 to 1\n\n          if (_this3.rate) utterance.rate = _this3.rate; // 0.1 to 10\n\n          if (_this3.pitch) utterance.pitch = _this3.pitch; //0 to 2\n\n          utterance.text = sentence; // Attach event listeners\n\n          (0, _toPairs.default)(listeners).forEach(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 2),\n                listener = _ref4[0],\n                fn = _ref4[1];\n\n            var newListener = function newListener(data) {\n              fn && fn(data);\n\n              if (listener === 'onerror') {\n                reject({\n                  utterances: utterances,\n                  lastUtterance: utterance,\n                  error: data\n                });\n              }\n\n              if (listener === 'onend') {\n                if (isLast) resolve({\n                  utterances: utterances,\n                  lastUtterance: utterance\n                });\n              }\n            };\n\n            utterance[listener] = newListener;\n          });\n          utterances.push(utterance);\n          speechSynthesis.speak(utterance);\n        });\n      });\n    }\n  }, {\n    key: \"pending\",\n    value: function pending() {\n      return speechSynthesis.pending;\n    }\n  }, {\n    key: \"paused\",\n    value: function paused() {\n      return speechSynthesis.paused;\n    }\n  }, {\n    key: \"speaking\",\n    value: function speaking() {\n      return speechSynthesis.speaking;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      speechSynthesis.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      speechSynthesis.resume();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      speechSynthesis.cancel();\n    }\n  }]);\n\n  return SpeakTTS;\n}();\n\nvar _default = SpeakTTS;\nexports.default = _default;","map":{"mappings":[{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/speak-tts/lib/speak-tts.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}}],"sources":{"node_modules/speak-tts/lib/speak-tts.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _trim = _interopRequireDefault(require(\"lodash/trim\"));\n\nvar _size = _interopRequireDefault(require(\"lodash/size\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _toPairs = _interopRequireDefault(require(\"lodash/toPairs\"));\n\nvar _isNil = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _isObject = _interopRequireDefault(require(\"lodash/isObject\"));\n\nvar _isString = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isFinite = _interopRequireDefault(require(\"lodash/isFinite\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SpeakTTS =\n/*#__PURE__*/\nfunction () {\n  function SpeakTTS() {\n    _classCallCheck(this, SpeakTTS);\n\n    this.browserSupport = 'speechSynthesis' in window && 'SpeechSynthesisUtterance' in window;\n    this.synthesisVoice = null;\n  }\n\n  _createClass(SpeakTTS, [{\n    key: \"init\",\n    value: function init(conf) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this.browserSupport) {\n          reject('Your browser does not support Speech Synthesis');\n        }\n\n        var listeners = (0, _get.default)(conf, 'listeners', {});\n        var splitSentences = (0, _get.default)(conf, 'splitSentences', true);\n        var lang = (0, _get.default)(conf, 'lang');\n        var volume = (0, _get.default)(conf, 'volume', 1);\n        var rate = (0, _get.default)(conf, 'rate', 1);\n        var pitch = (0, _get.default)(conf, 'pitch', 1);\n        var voice = (0, _get.default)(conf, 'voice'); // Attach event listeners\n\n        (0, _toPairs.default)(listeners).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              listener = _ref2[0],\n              fn = _ref2[1];\n\n          var newListener = function newListener(data) {\n            fn && fn(data);\n          };\n\n          if (listener !== 'onvoiceschanged') {\n            speechSynthesis[listener] = newListener;\n          }\n        });\n\n        _this._loadVoices().then(function (voices) {\n          // Handle callback onvoiceschanged by hand\n          listeners['onvoiceschanged'] && listeners['onvoiceschanged'](voices); // Initialize values if necessary\n\n          !(0, _isNil.default)(lang) && _this.setLanguage(lang);\n          !(0, _isNil.default)(voice) && _this.setVoice(voice);\n          !(0, _isNil.default)(volume) && _this.setVolume(volume);\n          !(0, _isNil.default)(rate) && _this.setRate(rate);\n          !(0, _isNil.default)(pitch) && _this.setPitch(pitch);\n          !(0, _isNil.default)(splitSentences) && _this.setSplitSentences(splitSentences);\n          resolve({\n            voices: voices,\n            lang: _this.lang,\n            voice: _this.voice,\n            volume: _this.volume,\n            rate: _this.rate,\n            pitch: _this.pitch,\n            splitSentences: _this.splitSentences,\n            browserSupport: _this.browserSupport\n          });\n        }).catch(function () {\n          reject();\n        });\n      });\n    }\n  }, {\n    key: \"_fetchVoices\",\n    value: function _fetchVoices() {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          var voices = speechSynthesis.getVoices();\n\n          if ((0, _size.default)(voices) > 0) {\n            return resolve(voices);\n          } else {\n            return reject();\n          }\n        }, 100);\n      });\n    }\n  }, {\n    key: \"_loadVoices\",\n    value: function _loadVoices() {\n      var _this2 = this;\n\n      var remainingAttempts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this._fetchVoices().catch(function (error) {\n        if (remainingAttempts === 0) throw error;\n        return _this2._loadVoices(remainingAttempts - 1);\n      });\n    }\n  }, {\n    key: \"hasBrowserSupport\",\n    value: function hasBrowserSupport() {\n      return this.browserSupport;\n    }\n  }, {\n    key: \"setVoice\",\n    value: function setVoice(voice) {\n      var synthesisVoice;\n      var voices = speechSynthesis.getVoices(); // set voice by name\n\n      if ((0, _isString.default)(voice)) {\n        synthesisVoice = voices.find(function (v) {\n          return v.name === voice;\n        });\n      } // Set the voice in conf if found\n\n\n      if ((0, _isObject.default)(voice)) {\n        synthesisVoice = voice;\n      }\n\n      if (synthesisVoice) {\n        this.synthesisVoice = synthesisVoice;\n      } else {\n        throw 'Error setting voice. The voice you passed is not valid or the voices have not been loaded yet.';\n      }\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(lang) {\n      lang = lang.replace('_', '-'); // some Android versions seem to ignore BCP 47 and use an underscore character in language tag\n\n      if ((0, _utils.validateLocale)(lang)) {\n        this.lang = lang;\n      } else {\n        throw 'Error setting language. Please verify your locale is BCP47 format (http://schneegans.de/lv/?tags=es-FR&format=text)';\n      }\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      volume = parseFloat(volume);\n\n      if ((0, _isFinite.default)(volume) && volume >= 0 && volume <= 1) {\n        this.volume = volume;\n      } else {\n        throw 'Error setting volume. Please verify your volume value is a number between 0 and 1.';\n      }\n    }\n  }, {\n    key: \"setRate\",\n    value: function setRate(rate) {\n      rate = parseFloat(rate);\n\n      if ((0, _isFinite.default)(rate) && rate >= 0 && rate <= 10) {\n        this.rate = rate;\n      } else {\n        throw 'Error setting rate. Please verify your volume value is a number between 0 and 10.';\n      }\n    }\n  }, {\n    key: \"setPitch\",\n    value: function setPitch(pitch) {\n      pitch = parseFloat(pitch);\n\n      if ((0, _isFinite.default)(pitch) && pitch >= 0 && pitch <= 2) {\n        this.pitch = pitch;\n      } else {\n        throw 'Error setting pitch. Please verify your pitch value is a number between 0 and 2.';\n      }\n    }\n  }, {\n    key: \"setSplitSentences\",\n    value: function setSplitSentences(splitSentences) {\n      this.splitSentences = splitSentences;\n    }\n  }, {\n    key: \"speak\",\n    value: function speak(data) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        var text = data.text,\n            _data$listeners = data.listeners,\n            listeners = _data$listeners === void 0 ? {} : _data$listeners,\n            _data$queue = data.queue,\n            queue = _data$queue === void 0 ? true : _data$queue;\n        var msg = (0, _trim.default)(text);\n        if ((0, _isNil.default)(msg)) resolve(); // Stop current speech\n\n        !queue && _this3.cancel(); // Split into sentences (for better result and bug with some versions of chrome)\n\n        var utterances = [];\n        var sentences = _this3.splitSentences ? (0, _utils.splitSentences)(msg) : [msg];\n        sentences.forEach(function (sentence, index) {\n          var isLast = index === (0, _size.default)(sentences) - 1;\n          var utterance = new SpeechSynthesisUtterance();\n          if (_this3.synthesisVoice) utterance.voice = _this3.synthesisVoice;\n          if (_this3.lang) utterance.lang = _this3.lang;\n          if (_this3.volume) utterance.volume = _this3.volume; // 0 to 1\n\n          if (_this3.rate) utterance.rate = _this3.rate; // 0.1 to 10\n\n          if (_this3.pitch) utterance.pitch = _this3.pitch; //0 to 2\n\n          utterance.text = sentence; // Attach event listeners\n\n          (0, _toPairs.default)(listeners).forEach(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 2),\n                listener = _ref4[0],\n                fn = _ref4[1];\n\n            var newListener = function newListener(data) {\n              fn && fn(data);\n\n              if (listener === 'onerror') {\n                reject({\n                  utterances: utterances,\n                  lastUtterance: utterance,\n                  error: data\n                });\n              }\n\n              if (listener === 'onend') {\n                if (isLast) resolve({\n                  utterances: utterances,\n                  lastUtterance: utterance\n                });\n              }\n            };\n\n            utterance[listener] = newListener;\n          });\n          utterances.push(utterance);\n          speechSynthesis.speak(utterance);\n        });\n      });\n    }\n  }, {\n    key: \"pending\",\n    value: function pending() {\n      return speechSynthesis.pending;\n    }\n  }, {\n    key: \"paused\",\n    value: function paused() {\n      return speechSynthesis.paused;\n    }\n  }, {\n    key: \"speaking\",\n    value: function speaking() {\n      return speechSynthesis.speaking;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      speechSynthesis.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      speechSynthesis.resume();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      speechSynthesis.cancel();\n    }\n  }]);\n\n  return SpeakTTS;\n}();\n\nvar _default = SpeakTTS;\nexports.default = _default;"},"lineCount":310}},"hash":"9f7144e0bc09c4790e3ea796ec31df1d","cacheData":{"env":{}}}
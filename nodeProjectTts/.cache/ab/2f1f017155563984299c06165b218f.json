{"id":"node_modules/speak-tts/lib/utils.js","dependencies":[{"name":"E:\\NodeNinja\\nodeProjectTts\\package.json","includedInParent":true,"mtime":1551558297846},{"name":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\package.json","includedInParent":true,"mtime":1551557957577},{"name":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\.babelrc","includedInParent":true,"mtime":499162500000},{"name":"lodash/trim","loc":{"line":8,"column":43},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\utils.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\trim.js"},{"name":"lodash/compact","loc":{"line":10,"column":46},"parent":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\speak-tts\\lib\\utils.js","resolved":"E:\\NodeNinja\\nodeProjectTts\\node_modules\\lodash\\compact.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateLocale = exports.splitSentences = void 0;\n\nvar _trim = _interopRequireDefault(require(\"lodash/trim\"));\n\nvar _compact = _interopRequireDefault(require(\"lodash/compact\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar splitSentences = function splitSentences() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return (0, _compact.default)(text.replace(/\\.+/g, '.|').replace(/\\?/g, '?|').replace(/\\!/g, '!|').split(\"|\").map(function (sentence) {\n    return (0, _trim.default)(sentence);\n  }));\n};\n\nexports.splitSentences = splitSentences;\nvar bcp47LocalePattern = /^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|\\d{3}))?((?:-(?:[\\da-z]{5,8}|\\d[\\da-z]{3}))*)?((?:-[\\da-wy-z](?:-[\\da-z]{2,8})+)*)?(-x(?:-[\\da-z]{1,8})+)?$|^(x(?:-[\\da-z]{1,8})+)$/i; // eslint-disable-line max-len\n\n/**\n * Validate a locale string to test if it is bcp47 compliant\n * @param {String} locale The tag locale to parse\n * @return {Boolean} True if tag is bcp47 compliant false otherwise\n */\n\nvar validateLocale = function validateLocale(locale) {\n  return typeof locale !== 'string' ? false : bcp47LocalePattern.test(locale);\n};\n\nexports.validateLocale = validateLocale;","map":{"mappings":[{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/speak-tts/lib/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/speak-tts/lib/utils.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateLocale = exports.splitSentences = void 0;\n\nvar _trim = _interopRequireDefault(require(\"lodash/trim\"));\n\nvar _compact = _interopRequireDefault(require(\"lodash/compact\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar splitSentences = function splitSentences() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return (0, _compact.default)(text.replace(/\\.+/g, '.|').replace(/\\?/g, '?|').replace(/\\!/g, '!|').split(\"|\").map(function (sentence) {\n    return (0, _trim.default)(sentence);\n  }));\n};\n\nexports.splitSentences = splitSentences;\nvar bcp47LocalePattern = /^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|\\d{3}))?((?:-(?:[\\da-z]{5,8}|\\d[\\da-z]{3}))*)?((?:-[\\da-wy-z](?:-[\\da-z]{2,8})+)*)?(-x(?:-[\\da-z]{1,8})+)?$|^(x(?:-[\\da-z]{1,8})+)$/i; // eslint-disable-line max-len\n\n/**\n * Validate a locale string to test if it is bcp47 compliant\n * @param {String} locale The tag locale to parse\n * @return {Boolean} True if tag is bcp47 compliant false otherwise\n */\n\nvar validateLocale = function validateLocale(locale) {\n  return typeof locale !== 'string' ? false : bcp47LocalePattern.test(locale);\n};\n\nexports.validateLocale = validateLocale;"},"lineCount":34}},"hash":"26fb1b9df6789a289bd59823248ab05f","cacheData":{"env":{}}}